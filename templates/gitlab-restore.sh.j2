#!/usr/bin/env bash

#{{ ansible_managed}}

# get git user and group id
unset -v git_user_id
unset -v git_group_id
git_user_id=$(id {{ gitlab_git_user }} -u)
git_group_id=$(id {{ gitlab_git_group }} -g)

# find latest data backup file
unset -v latest_data
for file in $(find {{ gitlab_backup_path }} -type f -name "*gitlab_backup.tar")
do
  [[ $file -nt $latest_data ]] && latest_data=$file
done

# find latest config backup file
unset -v latest_config
for file in $(find {{ gitlab_backup_path }} -type f -name "*gitlab_config.tgz")
do
  [[ $file -nt $latest_config ]] && latest_config=$file
done

# stop services
gitlab-ctl stop puma
gitlab-ctl stop sidekiq
gitlab-ctl stop unicorn
gitlab-ctl reconfigure

# restore application backup
chown $git_user_id:$git_group_id $latest_data
latest_prefix=$(echo $latest_data | sed 's/_gitlab_backup.tar//')
force=yes /opt/gitlab/bin/gitlab-backup restore BACKUP=$latest_prefix

# restore file backup
tar xvzf $latest_config -C /

# start services
gitlab-ctl reconfigure
gitlab-ctl restart
gitlab-rake gitlab:check SANITIZE=true
gitlab-rake gitlab:doctor:secrets
